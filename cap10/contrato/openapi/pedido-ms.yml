openapi: 3.0.1
info:
  title: API Contrato
  version: 1.0.0
  description: API responsável por manter e registrar os contratos de financiamento de veiculos, bem como seus aditivos e anexos.
servers:
  - url: https://api2.registrauto.com.br/dev/api/v1.0
    description: Development
  - url: https://api2.registrauto.com.br/stg/api/v1.0
    description: Staging
  - url: https://api.registrauto.com.br/api/v1.0
    description: Production
paths:
  /contratos:
    post:
      summary: Registra um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - write:contratos
      operationId: registrarContrato
      tags:
       - Contrato
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contrato"
        description: XXXX.
      responses:
        "200":
          description: Aceito - O pedido foi recebido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Obtém a lista de informações de contratos de financiamento de veículo acordo com os parâmetros de busca.
      security:
        - ContratoAuth: 
          - read:contratos
      operationId: listarContratos
      tags:
       - Contrato
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Aceito - O pedido foi recebido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /contratos/{id}:
    get:
      summary: Obtém informações de um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - read:contratos
      operationId: getPedidoById
      tags:
        - Contrato
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      responses:
        "200":
          description: Os dados do pedido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Atualiza um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - write:contratos
      operationId: atualizaContratoById
      tags:
      - Contrato
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      responses:
        "200":
          description: Os dados do pedido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /contratos/{id}/aditivos:
    post:
      summary: Registra um aditivo a um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - write:aditivos
      operationId: inserirAditivoAoContrato
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      tags:
       - Aditivo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contrato"
        description: XXXX.
      responses:
        "200":
          description: Aceito - O pedido foi recebido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Atualiza o aditivo de um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - write:aditivos
      operationId: atualizaAditivoDoContratoById
      tags:
        - Aditivo
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      responses:
        "200":
          description: Os dados do pedido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /contratos/{id}/anexos:
    post:
      summary: Anexa um documento a um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - write:anexos
      operationId: inserirAnexoAoContrato
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      tags:
       - Anexo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contrato"
        description: XXXX.
      responses:
        "200":
          description: Aceito - O pedido foi recebido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Obtém a lista de anexos de um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - read:anexos
      operationId: getAnexoById
      tags:
        - Anexo
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
      responses:
        "200":
          description: Os dados do pedido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /contratos/{id}/anexos/{anexoId}:
    delete:
      summary: Remove um documento de um contrato de financiamento de veículo.
      security:
        - ContratoAuth: 
          - delete:anexos
      operationId: removeAnexoById
      tags:
        - Anexo
      parameters:
        - $ref: '#/components/parameters/ContratoIDPathParam'
        - $ref: '#/components/parameters/AnexoIDPathParam'
      responses:
        "200":
          description: Os dados do pedido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contrato"
        "400":
          description: Bad Request - Valida os campos de acordo com a definição do contrato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  parameters:
    
    ContratoIDPathParam:
      name: id
      in: path
      description: "Um identificador exclusivo para o pedido."
      example: "06f256c8-1bbf-42bf-93b4-ce2041bfb87e"
      required: true
      schema:
        type: string
        format: uuidv4
        
    AnexoIDPathParam:
      name: anexoId
      in: path
      description: "Um identificador exclusivo do anexo de um contrato."
      example: "1a30dce9-59fb-42e0-9423-d40d537d72df"
      required: true
      schema:
        type: string
        format: uuidv4
        
  securitySchemes:
    
    ContratoAuth:
      type: oauth2
      flows: 
        authorizationCode:
          authorizationUrl: https://{domain}/oauth/authorize/
          tokenUrl: https://{domain}/oauth/token/
          scopes:
            write:contratos: Permite registrar e atualizar um contrato de financimento.
            read:contratos: Permite somente leitura de contratos e seus aditivos e anexos.
            write:aditivos: Permite registrar e atualizar aditivo a um contrato de financimento.
            write:anexos: Permite anexar documento a um contrato de financimento.
            read:anexos: Permite somente leitura de anexos de um determinado contrato.
            delete:anexos: Permite remover anexo de um determinado contrato.
        clientCredentials: 
          tokenUrl: https://{domain}/oauth/token/
          scopes:
            write:contratos: Permite registrar e atualizar um contrato de financimento.
            read:contratos: Permite somente leitura de contratos e seus aditivos e anexos.
            write:aditivos: Permite registrar e atualizar aditivo a um contrato de financimento.
            write:anexos: Permite anexar documento a um contrato de financimento.
            read:anexos: Permite somente leitura de anexos de um determinado contrato.
            delete:anexos: Permite remover anexo de um determinado contrato.
  
  schemas:
    
    Contrato:
      type: "object"
      properties:
        codigo:
          type: "string"
          description: "Código HTTP"
        mensagem:
          type: "string"
          description: "Descrição do erro"
    Error:
      type: object
      properties:
        code:
          type: string
          example: "error_required_field"
          description: O código do erro.
        message:
          type: string
          description: "Mensagem de erro."
          example: "A informação dos dados de pagamento são obrigatória."